## Author: Nicholas Wilde

syntax "INO"  "\.?ino$"
comment "//"

# pinnames
color brightred "\<[A-Z_][0-9A-Z_]+\>" 

 
color green "\<((s?size)|((u_?)?int(8|16|32|64|ptr)))_t\>"

# Constants
icolor yellow "\<(HIGH|LOW|INPUT|OUTPUT)\>"

## === FUNCTIONS === ##

# Data Types
color magenta "\<(boolean|byte|char|float|int|long|word)\>"

# Control Structions
color magenta "\<(case|class|default|do|double|else|for|if|new|null|private|protected|public|short|signed|static|String|switch|this|throw|try|true|unsigned|void|while)\>" 
color magenta "\<(goto|continue|break|return)\>"

# Math
color brightyellow "\<(abs|acos|asin|atan|atan2|ceil|constrain|cos|degrees|exp|floor|log|map|max|min|radians|random|randomSeed|round|sin|sq|sqrt|tan)\>"

# Bits & Bytes
color brightyellow "\<(bitRead|bitWrite|bitSet|bitClear|bit|highByte|lowByte)\>"

# Analog I/O
color cyan "\<(analogReference|analogRead|analogWrite)\>"

# External Interrupts
color brightyellow "\<(attachInterrupt|detachInterrupt)\>"

# Time
color cyan "\<(delay|delayMicroseconds|millis|micros)\>"

# Digital I/O
color cyan "\<(pinMode|digitalWrite|digitalRead)\>"

# Interrupts
color cyan "\<(interrupts|noInterrupts)\>"

# Advanced I/O
color brightyellow "\<(noTone|pulseIn|shiftIn|shiftOut|tone)\>"

# Serial
color magenta "\<(Serial|Serial1|Serial2|Serial3|begin|end|peek|read|print|println|available|flush)\>"

# Structure
color cyan "\<(setup|loop)\>"

#
color magenta "^[[:space:]]*#[[:space:]]*(define|include(_next)?|(un|ifn?)def|endif|el(if|se)|if|warning|error|pragma)"

#
color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"

# GCC builtins
color cyan "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"

# integers
color yellow "[ ^\(<>=][0-9]\.?[0-9]*"

# function names
color cyan "([[:space:]]|)\w+\("
color normal "\(|<|>|="

# String highlighting.  You will in general want your comments and
# strings to come last, because syntax highlighting rules will be
# applied in the order they are read in.
color green "<[^=    ]*>" ""(\\.|[^"])*""

# This string is VERY resource intensive!
color green start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""

# Comments
color white "//.*"
color white start="/\*" end="\*/"


#!/usr/bin/env bash

GIT_DIR="$HOME/Library/Share/dot"

git clone --bare "https://github.com/yochem/dotfiles.git" "$GIT_DIR"

# create function to use dot as alias more times
dot() { git --git-dir="$GIT_DIR" --work-tree="$HOME" "$@"; }

dot checkout >/dev/null 2>&1

# if git checkout returned an error, create a backup and replace
if [ "$?" -ne 0 ]; then
    files=$(dot checkout 2>&1 | grep -E "^\s+" | awk {'print $1'})
    mkdir -p "$HOME/dotfiles-backup/"

    for file in $files; do
        mv "$file" "$HOME/dotfiles-backup/$file"
    done

    echo "some files already exist on your computer. They have been moved to $HOME/dotfiles-backup."
fi

# checkout again to really do the checkout
dot checkout >/dev/null 2>&1

dot config status.showUntrackedFiles no

if [ "$(uname -s)" = "Linux" ]; then
    source "$HOME/.bash_profile"
    mkdir -p "$XDG_CONFIG_HOME"
    mv "$HOME/Library/Config/"* "$XDG_CONFIG_HOME"

    mkdir -p "$XDG_DATA_HOME"
    mv "$HOME/Library/Share/"* "$XDG_DATA_HOME"

    mkdir -p "$XDG_CACHE_HOME"
    mv "$HOME/Library/Caches/"* "$XDG_CACHE_HOME"

    mkdir -p "$HOME/.local/bin/"
    mv "$HOME/Library/Scripts/"* "$HOME/.local/bin"

    rm -rf "$HOME/Library"

    if [ -f "$HOME/.config/git/config" ]; then
        sed -i 's/Library\/Config/.config/g' "$HOME/.config/git/config"
    fi
fi

echo "dotfiles installed! Run '. ~/.bash_profile' to reload"

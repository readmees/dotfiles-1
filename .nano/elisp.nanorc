## Here is an example for Emacs Lisp.

syntax elisp "\.el$"
magic "Lisp/Scheme program"
comment ";"

# Basic functions/macros
color cyan "\<(if|when|unless|cond|and|or|lambda|let|progn|while|dolist|dotimes)\>"
color cyan "\<save-((window-)?excursion|restriction)\>"
color cyan "\<eval-(and|when)-compile\>"
# Defining functions
color cyan "\<def(un|macro|subst|generic|alias)\>"
color cyan "\<cl-def(un|macro|subst|generic|struct|type)\>"
color cyan "\<define-(derived|minor|generic)-mode\>"
# Defining variables
color cyan "\<def(class|const|var(-local|alias)?)\>"
# Customization functions
color cyan "\<def(custom|face|group|theme)\>"
# Setting values
color cyan "\<(setq(-default|-local)?|setf|push|pop|declare(-function)?)\>"
# Feature functions
color cyan "\<(require|provide)\>"
# Quoted symbols
color yellow "#?'\<(\w|-)+\>"
# Booleans
color red "\<(t|nil)\>"
# Keywords
color blue ":(\w|[?-])+"
# Strings
color yellow start="^[[:blank:]]+\"" end="[^\]\""
color yellow ""(\\.|[^"])*""
# Comments
color cyan "(^|[[:space:]]);.*$"
